{"version":3,"sources":["services/calendar.service.ts","assets/images/logo.svg","components/header.tsx","components/basePage.tsx","components/Table.tsx","pages/horarios/horarios.tsx","pages/login/login.tsx","services/servico.service.ts","pages/servicos/servicos.tsx","services/home.service.ts","pages/home/home.tsx","routes.const.ts","routes.tsx","App.tsx","index.tsx"],"names":["dateToday","Date","now","CalendarService","Promise","resolve","reject","listHorarios","horario","push","id","this","idConter","data","inicial","final","length","horarioId","before","filter","console","log","PageHeader","props","useState","itemAtivo","activeItem","setActiveItem","tabs","RoutesInfo","route","RoutesEnum","Login","className","style","margin","href","src","logo","alt","model","tab","map","label","onTabChange","e","value","BasePage","marginTop","children","Table","prop","list","onRowClick","rowClick","column","col","field","header","ptBrLocale","dayNames","dayNamesShort","dayNamesMin","monthNames","monthNamesShort","today","clear","FormCalendar","date","setDate","hourStart","setHourStart","hourEnd","setHourEnd","funcMapper","func","addLocale","minDate","dateFormat","locale","showButtonBar","onChange","icon","showTime","timeOnly","tooltip","onClick","error","addHorario","getTime","getHours","getSeconds","then","onSubmit","PageHorarios","dates","setDates","dateToString","h","toLocaleDateString","useEffect","getHorarios","horarios","Horário","delHorario","d","PageLogin","ServicoService","listServices","servico","nome","descricao","servicoId","service","FormServico","title","setTitle","description","setDescription","target","rows","cols","autoResize","addServico","PageServicos","Array","of","servicos","setServicos","getServicos","Serviço","delServico","status","s","HomeService","listText","body","PageHome","texts","setTexts","getTexts","text","Home","legend","url","component","Routes","path","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb6ab2ff.chunk.js","sourcesContent":["import HorarioInterface from '../interfaces/Horario.interface';\n\nconst dateToday = Date.now();\nexport default class CalendarService {\n  private static idConter = 3;\n  private static listHorarios: HorarioInterface[] = [\n    { id: 1, data: dateToday, inicial: '10:30', final: '11:30' },\n    { id: 2, data: dateToday, inicial: '12:30', final: '13:30' },\n    { id: 3, data: dateToday, inicial: '14:30', final: '15:30' },\n  ];\n\n  static getHorarios(): Promise<HorarioInterface[]> {\n    return new Promise((resolve, reject) =>\n      resolve(CalendarService.listHorarios),\n    );\n  }\n\n  static addHorario(horario: HorarioInterface): Promise<HorarioInterface> {\n    CalendarService.listHorarios.push({\n      id: ++this.idConter,\n      data: horario.data,\n      inicial: horario.inicial,\n      final: horario.final,\n    });\n    return new Promise((resolve, reject) => {\n      resolve(\n        CalendarService.listHorarios[CalendarService.listHorarios.length - 1],\n      );\n    });\n  }\n  static delHorario(horarioId: number): Promise<number> {\n    const before = this.listHorarios.length;\n    this.listHorarios = this.listHorarios.filter(\n      (horario) => horario.id !== horarioId,\n    );\n    if (before > this.listHorarios.length) {\n      console.log('Deletado com sucesso');\n    }\n    return new Promise((resolve, reject) => resolve(200));\n  }\n}\n","export default __webpack_public_path__ + \"static/media/logo.a1db1546.svg\";","import React, { useState } from 'react';\n\nimport { TabMenu } from 'primereact/tabmenu';\n\nimport logo from '../assets/images/logo.svg';\nimport HeaderInterface from '../interfaces/Header.interface';\nimport { menu, RoutesEnum, RoutesInfo } from '../routes.const';\n\nconst PageHeader: React.FC<HeaderInterface> = (props) => {\n  const [activeItem, setActiveItem] = useState(props.itemAtivo);\n  const tabs: menu[] = RoutesInfo.filter(\n    (route) => route.id !== RoutesEnum.Login,\n  );\n\n  return (\n    <header className='p-d-flex p-flex-column p-jc-center'>\n      <a style={{ margin: 'auto'}} className='p-mr-12' href='/'>\n        <img src={logo} alt='Logo' />\n      </a>\n      <TabMenu\n        className='p-mr-12'\n        model={tabs}\n        activeItem={tabs\n          .filter((tab) => tab.id === activeItem)\n          .map((tab) => tab.label)}\n        onTabChange={(e) => setActiveItem(e.value)}\n      />\n    </header>\n  );\n};\n\nexport default PageHeader;\n","import React from 'react';\n\nimport PageHeader from './header';\nimport HeaderInterface from '../interfaces/Header.interface';\n\nconst BasePage: React.FC<HeaderInterface> = (props) => (\n  <div className='p-d-flex p-flex-row p-jc-center'>\n    <div className='p-lg-8'>\n      <header className='p-lg-12'>\n        <PageHeader itemAtivo={props.itemAtivo}></PageHeader>\n      </header>\n      <main className='p-lg-12 p-card' style={{ marginTop: '1rem' }}>\n        {props.children}\n      </main>\n    </div>\n  </div>\n);\n\nexport default BasePage;\n","import { Column } from 'primereact/column';\nimport { DataTable } from 'primereact/datatable';\nimport column from '../interfaces/Column.interface';\n\ninterface TableInterface {\n  list: any[];\n  column: column[];\n  className?: string;\n  rowClick: (row: any) => any;\n}\nconst Table: React.FC<TableInterface> = (prop) => (\n  <DataTable\n    className={prop.className}\n    value={prop.list}\n    onRowClick={(props) => prop.rowClick(props)}>\n    {prop.column.map((col) => (\n      <Column key={col.field} field={col.field} header={col.header} />\n    ))}\n  </DataTable>\n);\n\nexport default Table;\n","import React, { useEffect, useState } from 'react';\n\nimport { Button } from 'primereact/button';\nimport { Calendar } from 'primereact/calendar';\nimport { addLocale } from 'primereact/api';\n\nimport CalendarService from '../../services/calendar.service';\nimport HorarioInterface from '../../interfaces/Horario.interface';\nimport BasePage from '../../components/basePage';\nimport Table from '../../components/Table';\nimport column from '../../interfaces/Column.interface';\nimport { RoutesEnum } from '../../routes.const';\n\nconst PageHorarios = () => {\n  const interfaceDates: any[] = [];\n  const [dates, setDates] = useState(interfaceDates);\n  const columns: column[] = [\n    { field: 'data', header: 'Data' },\n    { field: 'inicial', header: 'Início' },\n    { field: 'final', header: 'Término' },\n  ];\n\n  const dateToString = (h: HorarioInterface) => {\n    return {\n      id: h.id,\n      data: new Date(h.data).toLocaleDateString(),\n      inicial: h.inicial,\n      final: h.final,\n    };\n  };\n\n  const handleRowTableClick = (e: { data: HorarioInterface }) => {\n    CalendarService.delHorario(e.data.id ? e.data.id : -1).then(() =>\n      setDates(dates.filter((d: HorarioInterface) => d.id !== e.data.id)),\n    );\n  };\n\n  const updateTable = (horario: HorarioInterface) =>\n    setDates([...dates, dateToString(horario)]);\n\n  useEffect(() => {\n    CalendarService.getHorarios().then((horarios) =>\n      setDates(horarios.map((h: HorarioInterface) => dateToString(h))),\n    );\n  }, []);\n\n  return (\n    <BasePage itemAtivo={RoutesEnum.Horário}>\n      <h1>Horários</h1>\n      <FormCalendar onSubmit={updateTable} />\n      <Table\n        className='p-mt-2'\n        list={dates}\n        column={columns}\n        rowClick={handleRowTableClick}\n      />\n    </BasePage>\n  );\n};\n\nconst ptBrLocale = {\n  dayNames: [\n    'domingo',\n    'segunda',\n    'terça',\n    'quarta',\n    'quinta',\n    'sexta',\n    'sábado',\n  ],\n  dayNamesShort: ['dom', 'seg', 'ter', 'qua', 'qui', 'sex', 'sáb'],\n  dayNamesMin: ['D', 'S', 'T', 'Qa', 'Qi', 'Se', 'Sa'],\n  monthNames: [\n    'janeiro',\n    'fevereiro',\n    'março',\n    'abril',\n    'maio',\n    'junho',\n    'julho',\n    'agosto',\n    'setembro',\n    'outubro',\n    'novembro',\n    'dezembro',\n  ],\n  monthNamesShort: [\n    'jan',\n    'feb',\n    'mar',\n    'abr',\n    'mai',\n    'jun',\n    'jul',\n    'ago',\n    'set',\n    'out',\n    'nov',\n    'dez',\n  ],\n  today: 'Hoje',\n  clear: 'Limpar',\n};\n\nconst FormCalendar: React.FC<{\n  onSubmit: (event: HorarioInterface) => void;\n}> = (prop) => {\n  const today: Date = new Date();\n  const [date, setDate] = useState(today);\n  const [hourStart, setHourStart] = useState(today);\n  const [hourEnd, setHourEnd] = useState(today);\n\n  const funcMapper = (func: (item: any) => void, value: any) => func(value);\n\n  const handleClickButton = () => {\n    if (!date || !hourStart || !hourEnd) {\n      return console.error('set values in form');\n    }\n    CalendarService.addHorario({\n      data: date.getTime(),\n      inicial: `${hourStart.getHours()}:${hourStart.getSeconds()}`,\n      final: `${hourEnd.getHours()}:${hourEnd.getSeconds()}`,\n    }).then((horario) => prop.onSubmit(horario));\n  };\n\n  addLocale('pt', ptBrLocale);\n  return (\n    <div className='p-d-flex'>\n      <Calendar\n        className='p-lg-4'\n        minDate={today}\n        value={date}\n        dateFormat='dd/mm/yy'\n        locale='pt'\n        showButtonBar\n        onChange={(e) => funcMapper(setDate, e.value)}\n      />\n      <div className='p-d-flex p-jc-between'>\n        <Calendar\n          className='p-lg-3'\n          icon='pi pi-clock'\n          showButtonBar\n          showTime\n          timeOnly\n          value={hourStart}\n          onChange={(e) => funcMapper(setHourStart, e.value)}\n        />\n        <div className='p-d-flex'>\n          <Calendar\n            className='p-lg-5'\n            icon='pi pi-clock'\n            showButtonBar\n            showTime\n            timeOnly\n            value={hourEnd}\n            onChange={(e) => funcMapper(setHourEnd, e.value)}\n          />\n          <Button\n            className='p-mr-1 p-button-rounded'\n            tooltip='Adicionar'\n            icon='pi pi-plus'\n            style={{ marginTop: '8px' }}\n            onClick={handleClickButton}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PageHorarios;\n","import React from 'react';\nimport BasePage from '../../components/basePage';\nimport { RoutesEnum } from '../../routes.const';\n\nconst PageLogin = () => (\n  <BasePage itemAtivo={RoutesEnum.Login} >\n    <span>login</span>\n  </BasePage>\n);\n\nexport default PageLogin;\n","import ServicoInterface from '../interfaces/Servico.interface';\n\nexport default class ServicoService {\n  private static idConter = 8;\n  private static listServices: ServicoInterface[] = [\n    { id: 1, nome: 'Estética Facial', descricao: 'loreipsum' },\n    { id: 2, nome: 'Micropigmentação', descricao: 'loreipsum' },\n    { id: 3, nome: 'Edermoterapia', descricao: 'loreipsum' },\n    { id: 4, nome: 'Hidratação facial', descricao: 'loreipsum' },\n    { id: 5, nome: 'Limpeza de pele', descricao: 'loreipsum' },\n    { id: 6, nome: 'Revitalização de pele', descricao: 'loreipsum' },\n    { id: 7, nome: 'Jato de plasma', descricao: 'loreipsum' },\n  ];\n\n  static getServicos(): Promise<ServicoInterface[]> {\n    return new Promise((resolve, reject) => resolve(this.listServices));\n  }\n\n  static addServico(servico: ServicoInterface): Promise<ServicoInterface> {\n    ServicoService.listServices.push({\n      id: ++this.idConter,\n      nome: servico.nome,\n      descricao: servico.descricao,\n    });\n    return new Promise((resolve, reject) => {\n      resolve(\n        ServicoService.listServices[ServicoService.listServices.length - 1],\n      );\n    });\n  }\n\n  static delServico(servicoId: number): Promise<number> {\n    const before = this.listServices.length;\n    this.listServices = this.listServices.filter(\n      (service) => service.id !== servicoId,\n    );\n    if (before > this.listServices.length) {\n      console.log('Deletado com sucesso');\n    }\n    return new Promise((resolve, reject) => resolve(200));\n  }\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { InputText } from 'primereact/inputtext';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Button } from 'primereact/button';\n\nimport ServicoInterface from '../../interfaces/Servico.interface';\nimport column from '../../interfaces/Column.interface';\n\nimport ServicoService from '../../services/servico.service';\nimport BasePage from '../../components/basePage';\nimport Table from '../../components/Table';\nimport { RoutesEnum } from '../../routes.const';\n\nconst PageServicos = () => {\n  const interfaceServico: ServicoInterface = { id: 0, nome: '', descricao: '' };\n  const [servicos, setServicos] = useState(Array.of(interfaceServico));\n\n  const handleRowTableClick = (e: { data: ServicoInterface }) => {\n    ServicoService.delServico(e.data.id ? e.data.id : -1).then((status) =>\n      setServicos(servicos.filter((s: ServicoInterface) => s.id !== e.data.id)),\n    );\n  };\n\n  const columns: column[] = [\n    { field: 'nome', header: 'Nome' },\n    { field: 'descricao', header: 'Descrição' },\n  ];\n\n  const updateTable = (servico: ServicoInterface) => {\n    setServicos([...servicos, servico]);\n    ServicoService.addServico(servico);\n  };\n  useEffect(() => {\n    ServicoService.getServicos().then((servicos) => {\n      setServicos(servicos);\n    });\n  }, []);\n\n  return (\n    <BasePage itemAtivo={RoutesEnum.Serviço}>\n      <h1>Serviços</h1>\n      <FormServico onSubmit={updateTable} />\n      <Table list={servicos} column={columns} rowClick={handleRowTableClick} />\n    </BasePage>\n  );\n};\n\ninterface FormInterface {\n  onSubmit: (event: ServicoInterface) => void;\n}\nconst FormServico: React.FC<FormInterface> = (prop) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  const funcMapper = (func: (item: any) => void, value: any) =>\n    func(value.target.value);\n\n  const handleClickButton = () => {\n    if (!title || !description) {\n      return console.error('set values in form');\n    }\n    ServicoService.addServico({\n      nome: title,\n      descricao: description,\n    }).then((servico) => prop.onSubmit(servico));\n  };\n\n  return (\n    <div className='p-d-flex p-flex-column p-mb-3'>\n      <h3>Título</h3>\n      <InputText\n        className='p-lg-4'\n        value={title}\n        onChange={(e) => funcMapper(setTitle, e)}\n      />\n\n      <h3>Descrição</h3>\n      <InputTextarea\n        className='p-lg-6'\n        rows={5}\n        cols={30}\n        value={description}\n        autoResize\n        onChange={(e) => funcMapper(setDescription, e)}\n      />\n      <Button\n        className='p-mt-3 p-lg-2 p-button-rounded'\n        label='Adicionar'\n        icon='pi pi-plus'\n        onClick={handleClickButton}\n      />\n    </div>\n  );\n};\n\nexport default PageServicos;\n","import TextInterface from '../interfaces/Text.interface';\n\nexport default class HomeService {\n  private static listText: TextInterface[] = [\n    {\n      header: 'header',\n      body:\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n    },\n    {\n      header: 'header2',\n      body:\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n    },\n    {\n      header: 'header3',\n      body:\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n    },\n  ];\n\n  static getTexts(): Promise<TextInterface[]> {\n    return new Promise<TextInterface[]>((resolve, reject) =>\n      resolve(HomeService.listText),\n    );\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport BasePage from '../../components/basePage';\nimport { RoutesEnum } from '../../routes.const';\nimport { Fieldset } from 'primereact/fieldset';\nimport HomeService from '../../services/home.service';\nimport TextInterface from '../../interfaces/Text.interface';\n\nconst PageHome = () => {\n  const interfaceTexts: TextInterface[] = [];\n  const [texts, setTexts] = useState(interfaceTexts);\n  useEffect(() => {\n    HomeService.getTexts().then((text) => setTexts(text));\n  }, []);\n  return (\n    <BasePage itemAtivo={RoutesEnum.Home}>\n      <h1>Home</h1>\n      {texts.map((text) => (\n        <Fieldset className=\"p-mt-4\" legend={text.header}>\n          <p>{text.body}</p>\n        </Fieldset>\n      ))}\n    </BasePage>\n  );\n};\n\nexport default PageHome;\n","import PageHorarios from './pages/horarios/horarios';\nimport PageLogin from './pages/login/login';\nimport PageServicos from './pages/servicos/servicos';\nimport PageHome from './pages/home/home';\nimport { MenuItem } from 'primereact/api';\n\nexport interface menu extends MenuItem {\n  id?: number;\n  component?: any;\n}\n\nexport enum RoutesEnum {\n  Home,\n  Login,\n  Serviço,\n  Horário,\n}\n\nexport const RoutesInfo: menu[] = [\n  {\n    id: RoutesEnum.Home,\n    label: 'Home',\n    url: '/',\n    icon: 'pi pi-fw pi-home',\n    component: PageHome,\n  },\n  {\n    id: RoutesEnum.Serviço,\n    label: 'Serviços',\n    url: '/servicos',\n    icon: 'pi pi-fw pi-list',\n    component: PageServicos,\n  },\n  {\n    id: RoutesEnum.Horário,\n    label: 'Horário',\n    url: '/horarios',\n    icon: 'pi pi-fw pi-calendar',\n    component: PageHorarios,\n  },\n  {\n    id: RoutesEnum.Login,\n    label: 'Login',\n    url: '/login',\n    component: PageLogin,\n  },\n];\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport { RoutesInfo } from './routes.const';\n\nconst Routes = () => (\n  <Router>\n    {RoutesInfo.map((route) => (\n      <Route key={route.id} path={route.url} exact component={route.component} />\n    ))}\n  </Router>\n);\n\nexport default Routes;\n","import React from 'react';\n\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport 'primeflex/primeflex.css';\n\nimport Routes from './routes';\n\nconst App = () => <Routes />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}